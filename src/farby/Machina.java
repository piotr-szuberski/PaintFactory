/* Autor : Piotr Szuberski
*  Uniwersytet Warszawski
*  p.szuberski@student.uw.edu.pl
*/

package farby;

import static java.nio.file.Files.list;
import static java.rmi.Naming.list;
import java.util.ArrayList;
import static java.util.Collections.list;
import java.util.HashMap;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.regex.PatternSyntaxException;
import javax.swing.JList;
import javax.swing.JOptionPane;


public class Machina extends javax.swing.JFrame {

    public Machina() {
        initComponents();
        
        mieszanie = false;
        buttonUzyjPigment.setEnabled(false);
        
        
        try {
            maszynaMieszajaca = new MaszynaMieszajaca(new KonfiguracjaMaszyny());
        } catch (BladMaszyny e) {
                wyrzucOkienko("W plikach konfiguracyjnych były błędy!"
                        + " Zawołaj obsługę techniczną");
                System.exit(1);
        }
        
        uzupelnijListeFarb();
        uzupelnijListePigmentow();
    }

    private void uzupelnijListeFarb() {
         Map<String, Farba> farby = maszynaMieszajaca.konfiguracja().listaFarb();
        String[] nazwyFarb = new String[farby.size()];
        int k = 0;
        
        for (Map.Entry<String, Farba> entry : farby.entrySet()) {
            nazwyFarb[k++] = entry.getKey();
        }
        
        listaFarby.setModel(new javax.swing.AbstractListModel<String>() {
            
            String[] strings = nazwyFarb;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
            
        });
    }
    
    private void uzupelnijListePigmentow() {
        Map<String, Pigment> pigmenty = maszynaMieszajaca.konfiguracja().listaPigmentow();
        String[] nazwyPigmentow = new String[pigmenty.size()];
        int k = 0;
        
        for (Map.Entry<String, Pigment> entry : pigmenty.entrySet()) {
            nazwyPigmentow[k++] = entry.getKey();
        }
        
        listaPigmenty.setModel(new javax.swing.AbstractListModel<String>() {
            
            String[] strings = nazwyPigmentow;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
            
        });
    }
    
    private void ustawTekstyFarby() {
        if (obecnaFarba != null) {
            textNazwaFarby.setText(obecnaFarba.nazwa());
            textToksFarby.setText("" + obecnaFarba.toksycznosc());
            textJakFarby.setText("" + obecnaFarba.jakosc());
        }
        else {
            textNazwaFarby.setText("");
            textToksFarby.setText("");
            textJakFarby.setText("");
        }
    }
    
    private void ustawTekstyPigmentu() {
        if (obecnyPigment != null) {
            textNazwaPigment.setText(obecnyPigment.nazwa());
            textToksPigment.setText(obecnyPigment.toksycznoscMod().toString());
            textJakPigment.setText(obecnyPigment.jakoscMod().toString());
            Map<String, Map<String, String>> listaZal =
                    maszynaMieszajaca.konfiguracja().listaZaleznosci();
            if (obecnaFarba == null) {
                textBaza.setText("");
                textEfekt.setText("");
            }
            else {
                if (listaZal.containsKey(obecnaFarba.nazwa())) {
                    textBaza.setText(obecnaFarba.nazwa());
                    if (listaZal.get(obecnaFarba.nazwa()).containsKey(obecnyPigment.nazwa())) {
                        textEfekt.setText(listaZal.get(obecnaFarba.nazwa()).get(obecnyPigment.nazwa()));
                    }
                    else {
                        textEfekt.setText("");
                    }
                }
                else {
                    textBaza.setText("");
                    textEfekt.setText("");
                }
            }
        }
        else {
            textNazwaPigment.setText("");
            textToksPigment.setText("");
            textJakPigment.setText("");
            textBaza.setText("");
            textEfekt.setText("");
        }
    }
    
    private void wyrzucOkienko(String s) {
        JOptionPane.showMessageDialog(null, s);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textNazwaFarby = new javax.swing.JTextField();
        textToksFarby = new javax.swing.JTextField();
        textJakFarby = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaFarby = new javax.swing.JList<>();
        buttonDodajFarbe = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        buttonMieszaj = new javax.swing.JButton();
        buttonWyswietlFarbe = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        buttonClose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textNazwaPigment = new javax.swing.JTextField();
        textToksPigment = new javax.swing.JTextField();
        textJakPigment = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textBaza = new javax.swing.JTextField();
        textEfekt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaPigmenty = new javax.swing.JList<>();
        buttonDodajPigment = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        buttonUzyjPigment = new javax.swing.JButton();
        buttonWyswietlPigment = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(178, 241, 127));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(244, 153, 61));

        jPanel2.setBackground(new java.awt.Color(100, 253, 244));

        jLabel1.setText("Nazwa:");

        jLabel2.setText("Toksyczność:");

        jLabel3.setText("Jakość:");

        textNazwaFarby.setEditable(false);

        textToksFarby.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textToksFarbyKeyPressed(evt);
            }
        });

        textJakFarby.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textJakFarbyActionPerformed(evt);
            }
        });
        textJakFarby.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textJakFarbyKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNazwaFarby))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textToksFarby)
                            .addComponent(textJakFarby))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textNazwaFarby)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textToksFarby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textJakFarby)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        listaFarby.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaFarbyValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaFarby);

        buttonDodajFarbe.setText("Dodaj Farbę");
        buttonDodajFarbe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDodajFarbeActionPerformed(evt);
            }
        });

        jLabel4.setText("Baza farb:");

        buttonMieszaj.setText("Mieszaj!");
        buttonMieszaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMieszajActionPerformed(evt);
            }
        });

        buttonWyswietlFarbe.setText("Wybierz farbę");
        buttonWyswietlFarbe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonWyswietlFarbeActionPerformed(evt);
            }
        });

        jLabel9.setText("Wybrana farba:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(buttonDodajFarbe)
                                .addGap(66, 66, 66)
                                .addComponent(buttonWyswietlFarbe)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonMieszaj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(106, 106, 106))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDodajFarbe)
                    .addComponent(buttonWyswietlFarbe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonMieszaj, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        buttonClose.setText("Zakończ");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(244, 153, 61));

        jPanel4.setBackground(new java.awt.Color(255, 66, 190));

        jLabel5.setText("Nazwa:");

        jLabel6.setText("Toksyczność:");

        jLabel7.setText("Jakość:");

        textNazwaPigment.setEditable(false);

        textToksPigment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textToksPigmentKeyPressed(evt);
            }
        });

        textJakPigment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textJakPigmentKeyPressed(evt);
            }
        });

        jLabel11.setText("Farba baza:");

        textBaza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textBazaKeyPressed(evt);
            }
        });

        textEfekt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textEfektKeyPressed(evt);
            }
        });

        jLabel12.setText("Farba efekt:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNazwaPigment))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textToksPigment)
                            .addComponent(textJakPigment)
                            .addComponent(textBaza)
                            .addComponent(textEfekt))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textNazwaPigment)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textToksPigment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textJakPigment)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textBaza)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textEfekt)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(listaPigmenty);

        buttonDodajPigment.setText("Dodaj Pigment");
        buttonDodajPigment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDodajPigmentActionPerformed(evt);
            }
        });

        jLabel8.setText("Baza pigmentów:");

        buttonUzyjPigment.setText("Użyj pigmentu!");
        buttonUzyjPigment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUzyjPigmentActionPerformed(evt);
            }
        });

        buttonWyswietlPigment.setText("Wybierz pigment");
        buttonWyswietlPigment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonWyswietlPigmentActionPerformed(evt);
            }
        });

        jLabel10.setText("Wybrany pigment:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonUzyjPigment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonDodajPigment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonWyswietlPigment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDodajPigment)
                    .addComponent(buttonWyswietlPigment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonUzyjPigment, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(buttonClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void przerwijMieszanie() {
        if (mieszanie) {
            mieszanie = false;
            buttonUzyjPigment.setEnabled(false);
            System.out.println("Koniec mieszania");
        }
    }
    
    private void buttonMieszajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMieszajActionPerformed
        if (obecnaFarba != null) {
            mieszanie = true;
            buttonUzyjPigment.setEnabled(true);
            System.out.println("Zaczynam mieszanie");
        }
        else
            wyrzucOkienko("Nie wybrano farby!");
    }//GEN-LAST:event_buttonMieszajActionPerformed

    private void buttonDodajFarbeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDodajFarbeActionPerformed
        try {
            obecnaFarba = maszynaMieszajaca.konfiguracja().dodajKolor();
            uzupelnijListeFarb();
            ustawTekstyFarby();
            ustawTekstyPigmentu();
            
        } catch (BladParametrow e) {
                wyrzucOkienko("Wylosowano istniejący kolor");
        }
        
        przerwijMieszanie();
    }//GEN-LAST:event_buttonDodajFarbeActionPerformed

    private void listaFarbyValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaFarbyValueChanged

    }//GEN-LAST:event_listaFarbyValueChanged

    private void buttonWyswietlFarbeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonWyswietlFarbeActionPerformed
        if (listaFarby.getSelectedValue() != null) {
            String farba = listaFarby.getSelectedValue();
            obecnaFarba = maszynaMieszajaca.konfiguracja().listaFarb().get(farba);
            ustawTekstyFarby();
            if (obecnyPigment != null)
                ustawTekstyPigmentu();
            if (obecnyPigment != null)
            przerwijMieszanie();
        }
    }//GEN-LAST:event_buttonWyswietlFarbeActionPerformed

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void textToksFarbyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textToksFarbyKeyPressed
        if (evt.getKeyChar() == '\n' && !textToksFarby.getText().equals("") &&
                obecnaFarba != null) {
            
            try {
                int toks = Integer.parseInt(textToksFarby.getText());
                obecnaFarba.zmienToksycznosc(toks);
            } catch (NumberFormatException e) {
                wyrzucOkienko("Nieprawidłowa liczba");
            } catch (BladParametrow e) {
                wyrzucOkienko("Wartosc spoza zakresu");
            }
            
            przerwijMieszanie();
        }
    }//GEN-LAST:event_textToksFarbyKeyPressed

    private void textJakFarbyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textJakFarbyActionPerformed

    }//GEN-LAST:event_textJakFarbyActionPerformed

    private void textJakFarbyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textJakFarbyKeyPressed
        if (evt.getKeyChar() == '\n' && !textJakFarby.getText().equals("") &&
                obecnaFarba != null) {
            
            try {
                int jak = Integer.parseInt(textJakFarby.getText());
                obecnaFarba.zmienJakosc(jak);
            } catch (NumberFormatException e) {
                wyrzucOkienko("Nieprawidłowa liczba");
            } catch (BladParametrow e) {
                wyrzucOkienko("Wartosc spoza zakresu");
            }
            
            przerwijMieszanie();
        }
    }//GEN-LAST:event_textJakFarbyKeyPressed

    private void buttonDodajPigmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDodajPigmentActionPerformed
        try {
            obecnyPigment = maszynaMieszajaca.konfiguracja().dodajPigment();
            
            uzupelnijListePigmentow();
        
            ustawTekstyPigmentu();
            
        } catch (BladParametrow e) {
            wyrzucOkienko("Wylosowano istniejący pigment");
        }
    }//GEN-LAST:event_buttonDodajPigmentActionPerformed

    private void textToksPigmentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textToksPigmentKeyPressed
        String tekst = textToksPigment.getText();
        double x;
        char zmiana;
        
        if (evt.getKeyChar() == '\n' && !tekst.equals("") && obecnyPigment != null) {
            try {
                if (tekst.matches("[x\\+\\-]{1}\\d+\\.\\d+") ||
                        tekst.matches("[x\\-\\+]{1}\\d+")) {
                    
                    zmiana = tekst.charAt(0);
                    String modString = tekst.replaceAll("[x+\\-]", "");
                    x = Double.parseDouble(modString);
                    obecnyPigment.zmienToksycznosc(zmiana, x);
                    przerwijMieszanie();
                }
                else {
                    throw new InputMismatchException();
                }
            } catch (PatternSyntaxException e) {
                wyrzucOkienko("Nieprawidłowy format");
            } catch (InputMismatchException e) {
                wyrzucOkienko("Nieprawidłowy format");
            } catch (BladParametrow e) {
                wyrzucOkienko("Wartość spoza zakresu");
            }
        }
    }//GEN-LAST:event_textToksPigmentKeyPressed

    private void buttonWyswietlPigmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonWyswietlPigmentActionPerformed
        if (listaPigmenty.getSelectedValue() != null) {
            String pigment = listaPigmenty.getSelectedValue();
            obecnyPigment = maszynaMieszajaca.konfiguracja().listaPigmentow().get(pigment);
            ustawTekstyPigmentu();
        }
    }//GEN-LAST:event_buttonWyswietlPigmentActionPerformed

    private void textJakPigmentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textJakPigmentKeyPressed
        String tekst = textJakPigment.getText();
        double x;
        char zmiana;
        
        if (evt.getKeyChar() == '\n' && !tekst.equals("") && obecnyPigment != null) {
            try {
                if (tekst.matches("[x\\+\\-]{1}\\d+\\.\\d+") ||
                        tekst.matches("[x\\-\\+]{1}\\d+")) {
                    
                    zmiana = tekst.charAt(0);
                    String modString = tekst.replaceAll("[x+-]", "");
                    x = Double.parseDouble(modString);
                    obecnyPigment.zmienJakosc(zmiana, x);
                    przerwijMieszanie();
                }
                else {
                    throw new InputMismatchException();
                }
                
            } catch (PatternSyntaxException e) {
                wyrzucOkienko("Nieprawidłowy format");
            } catch (InputMismatchException e) {
                wyrzucOkienko("Nieprawidłowy format");
            } catch (BladParametrow e) {
                wyrzucOkienko("Wartość spoza zakresu");
            }
        }
    }//GEN-LAST:event_textJakPigmentKeyPressed

    private void buttonUzyjPigmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUzyjPigmentActionPerformed
        
        if (obecnyPigment == null) {
            wyrzucOkienko("Nie wybrano pigmentu");
            return;
        }
        try {
            System.out.println("Dodaję pigment: " + obecnyPigment.toString());
            obecnaFarba = maszynaMieszajaca.mieszaj(obecnaFarba, obecnyPigment);
            przerwijMieszanie();
            System.out.println("Otrzymano farbę: " + obecnaFarba.toString());
            
        } catch (BladMaszyny e) {
            przerwijMieszanie();
            wyrzucOkienko("Konfiguracja nie zna otrzymanego koloru!\n"
                    + "Wylano farbę");
            obecnaFarba = null;
        } catch (BladParametrow e) {
            przerwijMieszanie();
            wyrzucOkienko("Otrzymana farba ma parametry niemożliwe do zmierzenia!\n"
                    + "Wylano farbę");
            obecnaFarba = null;
        } finally {
                
            ustawTekstyFarby();

            obecnyPigment = null;
            ustawTekstyPigmentu();
        }
    }//GEN-LAST:event_buttonUzyjPigmentActionPerformed

    private void textBazaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBazaKeyPressed
        if (obecnyPigment != null && obecnaFarba != null && evt.getKeyChar() == '\n') {
            String tekstB = textBaza.getText();
            String tekstE = textEfekt.getText();
            Map<String, Map<String, String>> listaZal =
                    maszynaMieszajaca.konfiguracja().listaZaleznosci();
            if (tekstB.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+") &&
                    tekstE.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+")) {
                if (listaZal.containsKey(tekstB)) {
                    listaZal.get(tekstB).put(obecnyPigment.nazwa(), tekstE);
                }
                else {
                    listaZal.put(tekstB, new TreeMap<>());
                    listaZal.get(tekstB).put(obecnyPigment.nazwa(), tekstE);
                }
                if (maszynaMieszajaca.konfiguracja().listaFarb().containsKey(tekstB))
                    obecnaFarba = maszynaMieszajaca.konfiguracja().listaFarb().get(tekstB);
                else {
                    obecnaFarba = null;
                    wyrzucOkienko("Nie ma podanej bazy w konfiguracji");
                }
                ustawTekstyFarby();
                ustawTekstyPigmentu();
            }
            else {
                if (tekstB.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+") &&
                    tekstE.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+"))
                    wyrzucOkienko("Nieprawidłowa nazwa bazy i efektu");
                else if (!tekstB.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+"))
                    wyrzucOkienko("Nieprawidłowa nazwa bazy");
                else {
                    wyrzucOkienko("Nieprawidłowa nazwa efektu");
                }
            }
        }
    }//GEN-LAST:event_textBazaKeyPressed

    private void textEfektKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textEfektKeyPressed
        if (obecnyPigment != null && obecnaFarba != null && evt.getKeyChar() == '\n') {
            String tekstB = textBaza.getText();
            String tekstE = textEfekt.getText();
            Map<String, Map<String, String>> listaZal =
                    maszynaMieszajaca.konfiguracja().listaZaleznosci();
            
            if (tekstB.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+") &&
                    tekstE.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+")) {
                
                if (listaZal.containsKey(tekstB)) {
                    listaZal.get(tekstB).put(obecnyPigment.nazwa(), tekstE);
                }
                else {
                    listaZal.put(tekstB, new TreeMap<>());
                    listaZal.get(tekstB).put(obecnyPigment.nazwa(), tekstE);
                }
                
                if (maszynaMieszajaca.konfiguracja().listaFarb().containsKey(tekstB))
                    obecnaFarba = maszynaMieszajaca.konfiguracja().listaFarb().get(tekstB);
                else {
                    obecnaFarba = null;
                    wyrzucOkienko("Nie ma podanej bazy w konfiguracji");
                }
                ustawTekstyFarby();
                ustawTekstyPigmentu();
                
            }
            else
                if (tekstB.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+") &&
                    tekstE.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+"))
                    wyrzucOkienko("Nieprawidłowa nazwa bazy i efektu");
                else if (!tekstB.matches("[" + KonfiguracjaMaszyny.znakiKolorow + "]+"))
                    wyrzucOkienko("Nieprawidłowa nazwa bazy");
                else {
                    wyrzucOkienko("Nieprawidłowa nazwa efektu");
                }
        }
    }//GEN-LAST:event_textEfektKeyPressed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Machina().setVisible(true);
            }
        });
    }

    private MaszynaMieszajaca maszynaMieszajaca;
    Farba obecnaFarba;
    Pigment obecnyPigment;
    boolean mieszanie;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonDodajFarbe;
    private javax.swing.JButton buttonDodajPigment;
    private javax.swing.JButton buttonMieszaj;
    private javax.swing.JButton buttonUzyjPigment;
    private javax.swing.JButton buttonWyswietlFarbe;
    private javax.swing.JButton buttonWyswietlPigment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaFarby;
    private javax.swing.JList<String> listaPigmenty;
    private javax.swing.JTextField textBaza;
    private javax.swing.JTextField textEfekt;
    private javax.swing.JTextField textJakFarby;
    private javax.swing.JTextField textJakPigment;
    private javax.swing.JTextField textNazwaFarby;
    private javax.swing.JTextField textNazwaPigment;
    private javax.swing.JTextField textToksFarby;
    private javax.swing.JTextField textToksPigment;
    // End of variables declaration//GEN-END:variables
}
